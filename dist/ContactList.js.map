{"version":3,"sources":["../src/ContactList.js"],"names":["fs","require","util","writeFile","promisify","readFile","Contact","obj","cars","name","age","phone","newAge","parseInt","length","_name","_phone","toString","_age","_cars","ContactList","filename","list","contact","push","JSON","stringify","readFilePromise","then","parse","fileString","forEach","addContact","contactObj","Promise","resolve","exports"],"mappings":"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","file":"ContactList.js","sourcesContent":["const fs = require(\"fs\");\nconst util = require(\"util\");\n\nconst writeFile = util.promisify(fs.writeFile);\nconst readFile = util.promisify(fs.readFile);\n\nclass Contact {\n\tconstructor(obj) {\n\t\tif(!obj)\n\t\t\tthrow \"Need an object to instantiate Contact properties.\";\n\n\t\t// console.log(\"obj:\", obj);\n\t\tthis.cars = obj.cars;\n\t\tthis.name = obj.name;\n\t\tthis.age = obj.age;\n\t\tthis.phone = obj.phone;\n\t};\n\n\tset name (name){\n\t\tif(!name)\n\t\t\tthrow \"Name is needed to create a person\";\n\t\telse if(typeof name !== \"string\")\n\t\t\tthrow \"Contact.name needs to be a string.\"\n\t\telse if(name.length < 4)\n\t\t\tthrow \"Contact.name needs to be at least 4 characters.\"\n\t\tthis._name = name;\n\t}\n\n\tget name(){\n\t\treturn this._name;\n\t}\n  \n\n  get phone(){\n  \treturn this._phone;\n  }\n\n  set phone(phone){\n  \tif(!phone)\n  \t\treturn this._phone = null;\n\n  \tif(typeof phone === \"string\")\n  \t\t;\n  \telse if(typeof phone === \"number\")\n  \t\tphone = phone.toString();\n  \telse\n  \t\tthrow \"Contact.phone should be a string or a number.\"\n\n  \tif(phone.length < 8)\n  \t\tthrow \"Contact.phone should be at least 8 digits long.\"\n\n  \tthis._phone = phone;\n  }\n  get age(){\n  \treturn this._age;\n  }\n  set age(age){\n  \tif(!age)\n  \t\tthrow 'no age provided'\n  \tthis._age = age;\n  }\n\n    get cars(){\n  \treturn this._cars;\n  }\n  set cars(cars){\n  \n  \tthis._cars = cars;\n  }\n\n  // this helps JSON.stringify convert getter properties correctly\n  // https://stackoverflow.com/questions/42107492/json-stringify-es6-class-property-with-getter-setter\n  toJSON (){\n  \treturn {\n  \t\tname: this.name,\n  \t\tage: this.age,\n  \t\tphone: this.phone,\n  \t\tcars: this.cars\n  \t}\n  }\n\n  call() {\n  \tif (this.phone)\n  \t\treturn `Calling ${ this.name } at this.phone`;\n  \telse\n  \t\treturn `${ this.name } has no phone number saved`;\n\n  }\n  birthday() {\n  \tlet newAge = parseInt(this.age);\n  \t ++newAge;\n  \treturn `Wishing ${ this.name } a happy ${ newAge }th birthday!`;\n  }\n  cars(){\n  \treturn 'hello'\n  }\n};\n\nclass ContactList {\n\tconstructor(filename){\n\t\tthis.list = [];\n\t\tthis.filename = filename;\n\t}\n\n\taddContact(contact){\n\t\tif(contact instanceof Contact){\n\t\t\tthis.list.push(contact);\n\t\t}\n\t}\n\n\tsave(){\n\t\treturn writeFile(this.filename, JSON.stringify(this.list), \"utf8\");\n\t}\n\n\tload(){\n\t\tconst readFilePromise = readFile(this.filename, \"utf8\");\n\t\t// clean the list, since we'll add all contacts again\n\t\tthis.list = [];\n\n\t\treturn readFilePromise\n\t\t.then(fileString => {\n\t\t\tJSON.parse(fileString)\n\t\t\t.forEach(contactObj => this.addContact(new Contact(contactObj)));\n\n\t\t\treturn Promise.resolve(null);\n\t\t});\n\t}\n};\n\nexports.Contact = Contact;\nexports.ContactList = ContactList;"]}