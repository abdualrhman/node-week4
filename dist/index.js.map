{"version":3,"sources":["../src/index.js"],"names":["http","fs","qs","contacts","port","app","listen","console","log","use","req","res","next","method","url","static","urlencoded","extended","json","get","send","post","obj","body","JSON","stringify","contact","err","status","load","then","addContact","save","write","name","end","catch","list","id","params","birthday","contacts1","cars","delete","pop","newCar","color","manufacturer","model"],"mappings":"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","file":"index.js","sourcesContent":["import * as http from \"http\";\nimport * as fs from \"fs\";\n// querystring is used to parse url parameters to an object\n// also a core module\nimport * as qs from \"querystring\";\nimport express from \"express\";\nimport bodyParser from \"body-parser\";\nimport { Contact, ContactList } from\"./ContactList.js\";\n\n\nlet contacts = new ContactList(\"./src/contacts.json\");\nconst port = 8080;\n\nconst app = express();\napp.listen(port, () => {\n\tconsole.log(`Server started at port ${ port }`);\n});\n\napp.use((req, res, next) => {\n\tconsole.log(req.method, req.url);\n\tnext();\n});\n\napp.use(\"/public\", express.static('public'));\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json())\n\n\n\napp.get(\"/\", (req, res) => {\n\t// console.log(\"get 1\");\n\tres.send(\"This is the webserver index.\");\n});\n\napp.post(\"/contact\", (req, res) => {\n\t// console.log(\"post 2\");\n\tconst obj = req.body;\n\tconsole.log(`Incoming user: ${ JSON.stringify(obj) }`);\n\n\tlet contact;\n\ttry{\n\t\tcontact = new Contact(obj);\n\t}\n\tcatch(err){\n\t\treturn res.status(401).send(err);\n\t}\n\n\treturn contacts.load()\n\t.then(() => {\n\t\tcontacts.addContact(contact);\n\t\tcontacts.save();\n\t})\n\t.then(() => {\n\t\tres.write(`Successfully saved contact: ${ contact.name }`);\n\t\tres.end();\n\t})\n\t.catch((err) => {\n\t\tres.status(500).send(err);\n\t})\n});\napp.get('/contacts', (req, res)=>{\n\treturn contacts.load()\n\t.then(()=>{\n\t\tres.json(contacts.list)\n\t})\n\t.catch((err)=>{\n\t\tres\n\t\t.status(500)\n\t\t.send(err)\n\t})\n})\napp.get('/contacts/:id', (req, res) => {\n\tconst id = req.params.id;\n\treturn contacts.load()\n\t.then(() =>{\n\t\tres.json(contacts.list[id - 1]);\n\t})\n\t.catch(res.err);\n});\n\napp.get('/contact/:id/birthday', (req, res)=>{\n\t\tconst id = req.params.id;\n\treturn contacts.load()\n\t.then(()=>{\n\t\tlet contact = new Contact(contacts.list[id-1])\n\t\tres.send(contact.birthday());\n\t\tlet contacts1 = new ContactList(\"./src/contacts1.json\");\n\t\treturn contacts1.load()\n\t\t.then(()=>{\n\t\t\tcontact.birthday()\n\t\t\tcontacts1.addContact(contact)\n\t\t\tcontacts1.save()\n\t\t})\n\t\t\n\t})\n\t.catch((err)=>{\n\t\tres\n\t\t.status(500)\n\t\t.send(err)\n\t})})\napp.get('/contact/:id/cars' , (req , res) => {\n\tconst id = req.params.id;\n\treturn contacts.load()\n\t.then(()=>{\n\t\t\tres.json(contacts.list[id-1].cars);\n\t})\n\t.catch((err)=>{res.send(err)})\n})\n\n\napp.delete('/delete/:id', (req, res)=>{\n\tconst id = req.params.id;\n\treturn contacts.load()\n\t.then(() =>{\n\t\treturn res.send(contacts.list.pop(id))\n\t})\n\t.catch((err)=>{\n\t\tres.send(err)\n\t})\n})\n\n// app.delete('/delete/:id', (req, res)=>{\n// \tconst id = req.params.id;\n// \treturn contacts.load()\n// \t.then(() =>{\n// \t\tres.json(contacts.list[id - 1]);\n// \t})\n// \t.then(()=>{\n// \t\treturn res.send(contacts.list.pop(id))\n// \t})\n// \t.catch(res.err)\n// })\n\n///////////////////\n\nimport {Car}from './car.js'\n\nlet newCar = new Car({\n\tcolor : 'red',\n\tmanufacturer: 'Ford',\n\tmodel : 'focus'\n\n})\n\napp.get('/car', (req, res)=>{\n\tres\n\t.status(200)\n\t.send(JSON.stringify(newCar))\n})\n\n\n\n\n\n"]}